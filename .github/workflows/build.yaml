name: Build and Release sitt CLI

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers when you push a tag like v1.0.0
  workflow_dispatch:  # Allows manual triggering from the GitHub Actions tab

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux
            extension: ''
            archive_extension: 'tar.gz'
            pack_command: 'tar -czf'
            content_type: 'application/gzip'
          - os: macos-latest
            target: x86_64-apple-darwin
            platform: macos
            extension: ''
            archive_extension: 'tar.gz'
            pack_command: 'tar -czf'
            content_type: 'application/gzip'
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: windows
            extension: '.exe'
            archive_extension: 'zip'
            pack_command: 'Compress-Archive -Path'
            content_type: 'application/zip'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Build CLI Binary
        run: |
          cargo build --release --target ${{ matrix.target }} --manifest-path cli/Cargo.toml

      - name: Copy Binary to bin Directory
        run: |
          mkdir -p bin/${{ matrix.platform }}
          cp target/${{ matrix.target }}/release/sitt${{ matrix.extension }} bin/${{ matrix.platform }}/sitt${{ matrix.extension }}

      - name: Package Binary
        run: |
          cd bin
          if [ "${{ matrix.platform }}" = "windows" ]; then
            ${{ matrix.pack_command }} "../sitt-${{ matrix.platform }}.${{ matrix.archive_extension }}" "${{ matrix.platform }}"
          else
            ${{ matrix.pack_command }} "../sitt-${{ matrix.platform }}.${{ matrix.archive_extension }}" "${{ matrix.platform }}"
          fi
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: sitt-${{ matrix.platform }}
          path: bin/sitt-${{ matrix.platform }}.${{ matrix.archive_extension }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: bin

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/sitt-linux.tar.gz
          asset_name: sitt-linux.tar.gz
          asset_content_type: application/gzip

      - name: Upload macOS Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/sitt-macos.tar.gz
          asset_name: sitt-macos.tar.gz
          asset_content_type: application/gzip

      - name: Upload Windows Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/sitt-windows.zip
          asset_name: sitt-windows.zip
          asset_content_type: application/zip
