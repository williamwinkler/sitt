name: Build and Release sitt CLI

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers when you push a tag like v1.0.0
  workflow_dispatch:  # Allows manual triggering from the GitHub Actions tab

permissions:
  contents: write  # Grant write permission to the contents scope

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # - os: ubuntu-latest
          #   target: x86_64-unknown-linux-gnu
          #   platform: linux
          #   extension: ''
          #   content_type: 'application/octet-stream'
          - os: macos-latest
            target: x86_64-apple-darwin
            platform: macos
            extension: ''
            content_type: 'application/octet-stream'
          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
          #   platform: windows
          #   extension: '.exe'
          #   content_type: 'application/octet-stream'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Build CLI Binary
        run: |
          cargo build --release --target ${{ matrix.target }} --manifest-path cli/Cargo.toml

      - name: Copy Binary to bin Directory
        run: |
          mkdir -p bin
          cp target/${{ matrix.target }}/release/sitt${{ matrix.extension }} bin/sitt-${{ matrix.platform }}${{ matrix.extension }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: sitt-${{ matrix.platform }}
          path: bin/sitt-${{ matrix.platform }}${{ matrix.extension }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: bin

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # - name: Upload Linux Binary to Release
      #   uses: actions/upload-release-asset@v1
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: bin/sitt-linux
      #     asset_name: sitt-linux
      #     asset_content_type: application/octet-stream

      - name: Upload macOS Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/sitt-macos
          asset_name: sitt-macos
          asset_content_type: application/octet-stream

      # - name: Upload Windows Binary to Release
      #   uses: actions/upload-release-asset@v1
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: bin/sitt-windows.exe
      #     asset_name: sitt-windows.exe
      #     asset_content_type: application/octet-stream
