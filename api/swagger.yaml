openapi: 3.0.0

info:
  description: This is a simple API to track time spent on projects whether it's personal or work-related.
  version: "1.0.0"
  title: Simple Time Tracking API (SITT API)

servers:
  - description: Local Development
    url: http://localhost:8080/api/v1
  - description: Production
    url: https://sitt.william-winkler.com/api/v1

paths:
  /projects:
    post:
      tags:
        - Projects
      summary: Create a new project
      description: Create a new unique project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProjectDto'
      responses:
        '201':
          description: Created a project successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
        '409':
          $ref: '#/components/responses/ProjectNameAlreadyExists'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Projects
      summary: Get all projects
      description: Retrieve a list of all projects
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDto'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /projects/{project_name}:
    get:
      tags:
        - Projects
      summary: Get project
      description: Retrieve details of a specific project by its name
      parameters:
        - $ref: '#/components/parameters/ProjectNameParam'
      responses:
        '200':
          description: Project details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
        '404':
          $ref: '#/components/responses/ProjectNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - Projects
      summary: Update project
      description: Update details of an existing project
      parameters:
        - $ref: '#/components/parameters/ProjectNameParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectDto'
      responses:
        '200':
          description: Project updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
        '409':
          $ref: '#/components/responses/ProjectNameAlreadyExists'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Projects
      summary: Delete project
      description: Delete a specific project by its name
      parameters:
        - $ref: '#/components/parameters/ProjectNameParam'
      responses:
        '204':
          description: Project deleted successfully
        '404':
          $ref: '#/components/responses/ProjectNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /track/statuses:
    get:
      tags:
        - Track time
      summary: Get the status of all projects
      description: Get the status for all projects
      responses:
        '200':
          description: List of project statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeTrackingStatusDto'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /track/{project_name}/status:
    get:
      tags:
        - Track time
      summary: Get time tracking status for project
      description: Get the current time tracking status of a specified project
      parameters:
        - in: path
          name: project_name
          required: true
          schema:
            type: string
          description: The ID of the project to get time tracking status
      responses:
        '200':
          description: Time tracking status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrackingStatusDto'
        '404':
          $ref: '#/components/responses/ProjectNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /track/{project_name}/start:
    post:
      tags:
        - Track time
      summary: Start time tracking on project
      description: Start time tracking on a specified project
      parameters:
        - in: path
          name: project_name
          required: true
          schema:
            type: string
          description: The ID of the project to start time tracking
      responses:
        '200':
          description: Started time tracking on project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrackingStartDto'
        '404':
          $ref: '#/components/responses/ProjectNotFound'
        '409':
          description: The project is currently being time tracked
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: "The project is currently being time tracked"
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /track/{project_name}/stop:
    post:
      tags:
        - Track time
      summary: Stop time tracking on project
      description: Stop time tracking on a specified project
      parameters:
        - in: path
          name: project_name
          required: true
          schema:
            type: string
          description: The ID of the project to stop time tracking
      responses:
        '200':
          description: Stopped time tracking on project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrackingStopDto'
        '404':
          $ref: '#/components/responses/ProjectNotFound'
        '409':
          description: The project is not currently being time tracked
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: "The project is not currently being time tracked"
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'


components:

  parameters:

    ProjectNameParam:
      name: project_name
      in: path
      description: The name of the project
      required: true
      schema:
        type: string
        maxLength: 25
        minLength: 1


  schemas:

    NewProjectDto:
      type: object
      required:
        - project_name
      properties:
        project_name:
          $ref: '#/components/schemas/project_name'

    UpdateProjectDto:
      type: object
      required:
        - project_name
      properties:
        project_name:
          $ref: '#/components/schemas/project_name'
          description: Updated project name

    ProjectDto:
      type: object
      properties:
        project_name:
          type: string
          description: Name of the project
          default: "my-project"
        created_at:
          type: string
          format: date-time
          description: Project creation timestamp
        modified_at:
          type: string
          format: date-time
          description: Project last update timestamp

    TimeTrackingStatusDto:
      type: object
      required:
        - project_name
        - status
      properties:
        project_name:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          description: The projects time tracking state
        started_at:
          type: string
          format: date-time
        duration:
          type: number
          format: float
          description: How long ago since the tracking was started in hours

    TimeTrackingStartDto:
      type: object
      properties:
        project_name:
          type: string
          description: Project name
        started_at:
          type: string
          format: date-time
          description: The timestamp the tracking was started
      required:
        - project_name
        - started_at

    TimeTrackingStopDto:
      type: object
      properties:
        project_name:
          type: string
          description: Project name
        started_at:
          type: string
          format: date-time
          description: The timestamp the tracking was started
        stopped_at:
          type: string
          format: date-time
          description: The timestamp the tracking was stopped
        duration:
          type: number
          format: float
          description: The duration of time tracked in hours
      required:
        - project_name
        - started_at
        - stopped_at
        - duration

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
        - error

    project_name:
      type: string
      description: Name of the project
      minLength: 1
      maxLength: 25
      example: my-project

  responses:

    ProjectNotFound:
      description: Project not found
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
              - type: object
                properties:
                  error:
                    type: string
                    default: "Project not found"

    ProjectNameAlreadyExists:
      description: Project name already exists
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                default: "There is already a project with the same name"

    UnprocessableEntity:
      description: The request was not able to be processed due to invalid input
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                default: "The request was unable to be processed due to invalid input"

    InternalServerError:
      description: Something went wrong
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                default: "Internal server error"
